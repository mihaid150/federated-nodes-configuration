apiVersion: apps/v1
kind: Deployment
metadata: { name: fog-app, namespace: fog2 }
spec:
  replicas: 1
  selector: { matchLabels: { app: fog-app } }
  template:
    metadata: { labels: { app: fog-app } }
    spec:
      nodeSelector: { role: fog2 }
      imagePullSecrets: [ { name: regcred } ]
      securityContext: { runAsUser: 1000, runAsGroup: 1000, fsGroup: 1000 }
      initContainers:
        - name: fix-perms-models
          image: busybox:1.36
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - >
              set -eux;
              mkdir -p /app/models /app/models/outbox;
              chown -R 1000:1000 /app/models /app/models/outbox || true;
              chmod -R ug+rwX /app/models /app/models/outbox || true
          volumeMounts:
            - { name: models, mountPath: /app/models }
            - { name: outbox, mountPath: /app/models/outbox }
      containers:
        - name: app
          image: docker.io/mipeda150/fedgrid-fog:v2025-09-06-1605
          ports: [ { containerPort: 8081 } ]
          envFrom: [ { configMapRef: { name: fog2-env } } ]
          volumeMounts:
            - { name: models, mountPath: /app/models }
            - { name: outbox, mountPath: /app/models/outbox }
            - { name: host-sys, mountPath: /host_sys, readOnly: true }
          readinessProbe:
            tcpSocket: { port: 8081 }
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - { name: models, persistentVolumeClaim: { claimName: fog2-models-pvc } }
        - { name: outbox, persistentVolumeClaim: { claimName: fog2-outbox-pvc } }
        - name: host-sys
          hostPath:
            path: /sys
            type: Directory
---
apiVersion: v1
kind: Service
metadata: { name: fog-app, namespace: fog2 }
spec:
  selector: { app: fog-app }
  ports: [ { name: http, port: 8081, targetPort: 8081 } ]

